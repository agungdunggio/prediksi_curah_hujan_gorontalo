---
import DemoAnimation from "../react/animation/DemoAnimation.jsx";
---


<section id="demo" class="mt-48 mb-48 py-20 bg-gradient-to-b from-black to-black">
    <DemoAnimation client:load />
    <div class="container mx-auto px-6">
      <div class="demo-header text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold mb-4">Uji Coba <span class="gradient-text">API Prediksi</span></h2>
        <p class="text-gray-400 max-w-2xl mx-auto">
          Masukkan jumlah hari prediksi untuk wilayah Gorontalo dan lihat langsung respon dari model LSTM kami.
        </p>
      </div>
  
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-10 items-start">
        
        <div class="demo-form bg-gray-800 rounded-xl p-8 border border-gray-700">
          <h3 class="text-2xl font-bold text-white mb-6">Parameter Prediksi</h3>
          <form id="api-form" class="space-y-6">
            <div>
              <label for="days" class="block text-sm font-medium text-gray-300 mb-2">Jumlah Hari Prediksi</label>
              <input type="number" placeholder="Contoh: 7" id="days" value="3" class="w-full p-3 rounded bg-gray-900 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" required>
            </div>
          </form>
  
          <button id="submit-btn" class="btn-primary w-full text-white font-semibold px-6 py-3 rounded-full mt-8 flex items-center justify-center">
            <span id="btn-text">Dapatkan Prediksi</span>
            <span id="loading-spinner" class="hidden">
              <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>
            </span>
          </button>
        </div>
  
        <div class="demo-result bg-gray-800 rounded-xl p-8 border border-gray-700 min-h-[300px] flex flex-col">
          <h3 class="text-2xl font-bold text-white mb-6">Hasil Prediksi (Visual)</h3>
          
          <div id="response-container" class="response-container-scrollable space-y-3 flex-grow">
            <div class="text-center py-10 text-gray-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M12 14v6m-4-3h8" /></svg>
              <p class="mt-2">Hasil prediksi akan muncul di sini.</p>
            </div>
          </div>

          <div id="raw-json-container" class="mt-6 hidden">
             <div class="border-t border-gray-700 pt-4 flex justify-between items-center">
                <h4 class="text-lg font-semibold text-white">Respon JSON Mentah</h4>
                <button id="toggle-json-btn" class="text-sm text-blue-400 hover:text-blue-300">Sembunyikan</button>
             </div>
             <pre id="raw-json-response" class="raw-json-box"></pre>
          </div>
        </div>
      </div>
    </div>
</section>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const submitBtn = document.getElementById('submit-btn');
        const responseContainer = document.getElementById('response-container');
        const btnText = document.getElementById('btn-text');
        const loadingSpinner = document.getElementById('loading-spinner');
        const rawJsonContainer = document.getElementById('raw-json-container');
        const rawJsonResponse = document.getElementById('raw-json-response');
        const toggleJsonBtn = document.getElementById('toggle-json-btn');
    
        let allPredictions = [];
        const INITIAL_DISPLAY_LIMIT = 7;
    
        const renderCards = (predictions) => {
            responseContainer.innerHTML = '';
            predictions.forEach(item => {
                const card = `
                    <div class="result-card">
                        <div class="flex items-center space-x-4">
                            <div class="icon-container">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-cyan-300" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M15.75 8.25a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-3.44l-2.22 2.22a.75.75 0 11-1.06-1.06l3.5-3.5a.75.75 0 011.03 0zm-10-1.06a.75.75 0 010 1.06L3.53 10.47l2.22-2.22a.75.75 0 011.06 1.06L4.59 11.53l2.22 2.22a.75.75 0 11-1.06 1.06l-3.5-3.5a.75.75 0 010-1.06l3.5-3.5a.75.75 0 011.06 0z" clip-rule="evenodd" /></svg>
                            </div>
                            <div>
                                <p class="font-semibold text-white">
                                ${new Date(item.date).toLocaleDateString('id-ID', { weekday: 'long', month: 'long', day: 'numeric' })}
                                </p>
                                <p class="text-sm text-gray-400">Prediksi untuk Gorontalo</p>
                            </div>
                        </div>
                        <div class="text-right">
                            <p class="text-2xl font-bold text-blue-400">
                            ${item.value.toFixed(2)} <span class="text-lg font-normal text-gray-400">mm/hari</span>
                            </p>
                        </div>
                    </div>`;
                responseContainer.innerHTML += card;
            });
        };

    
        const displayResults = (data) => {
            if (data.status && data.data && data.data.length > 0) {
                const predictionData = data.data[0];
                const predictions = predictionData.predictions;

                if (!predictions || predictions.length === 0) {
                    displayError('Tidak ada data prediksi dari server.');
                    return;
                }

                allPredictions = predictions;

                // render batch awal
                const initialBatch = allPredictions.slice(0, INITIAL_DISPLAY_LIMIT);
                renderCards(initialBatch);

                // tombol load more kalau datanya banyak
                if (allPredictions.length > INITIAL_DISPLAY_LIMIT) {
                    const loadMoreBtn = document.createElement('button');
                    loadMoreBtn.id = 'load-more-btn';
                    loadMoreBtn.className = 'load-more-btn';
                    loadMoreBtn.textContent = `Tampilkan ${allPredictions.length - INITIAL_DISPLAY_LIMIT} hasil lainnya...`;
                    responseContainer.appendChild(loadMoreBtn);

                    loadMoreBtn.addEventListener('click', () => {
                        renderCards(allPredictions);
                    });
                }

                // tampilkan raw JSON
                rawJsonResponse.textContent = JSON.stringify(data, null, 2);
                rawJsonContainer.classList.remove('hidden');
                rawJsonResponse.classList.remove('hidden');
                toggleJsonBtn.textContent = 'Sembunyikan';
            } else {
                displayError('Format respon tidak valid.');
            }
        };

    
        const displayError = (message) => {
            responseContainer.innerHTML = `<div class="text-center py-10 text-red-400"><p>${message}</p></div>`;
            rawJsonContainer.classList.add('hidden');
        };
    
        const showLoading = (isLoading) => {
            submitBtn.disabled = isLoading;
            if (isLoading) {
                btnText.classList.add('hidden');
                loadingSpinner.classList.remove('hidden');
                responseContainer.innerHTML = `<div class="text-center py-10 text-gray-500"><svg class="animate-spin mx-auto h-10 w-10 text-blue-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg><p class="mt-4">Memproses prediksi...</p></div>`;
                rawJsonContainer.classList.add('hidden');
            } else {
                btnText.classList.remove('hidden');
                loadingSpinner.classList.add('hidden');
            }
        };
    
        toggleJsonBtn.addEventListener('click', () => {
            const isHidden = rawJsonResponse.classList.toggle('hidden');
            toggleJsonBtn.textContent = isHidden ? 'Tampilkan' : 'Sembunyikan';
        });
    
        submitBtn.addEventListener('click', async () => {
            const days = document.getElementById('days').value;
            if (!days) { displayError("Mohon isi jumlah hari prediksi."); return; }
            showLoading(true);
    
            try {
                const res = await fetch("http://localhost:8000/api/v1/predict", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ n_days: parseInt(days) })
                });
    
                if (!res.ok) {
                    const errorData = await res.json();
                    if (res.status === 422 && errorData.detail && errorData.detail.length > 0) {
                        displayError(errorData.detail[0].msg);
                    } else {
                        throw new Error(`HTTP error! status: ${res.status}`);
                    }
                } else {
                    const data = await res.json();
                    displayResults(data);
                }
            } catch (err) {
                displayError('Gagal memproses data dari server: ' + err.message);
            } finally {
                showLoading(false);
            }
        });
    });
    </script>
    

<style>
/* ... (Style lama tetap sama) ... */
.btn-primary { background: linear-gradient(90deg, #3b82f6, #06b6d4); transition: all 0.3s ease; }
.btn-primary:hover { transform: translateY(-2px); box-shadow: 0 5px 15px rgba(56, 189, 248, 0.4); }
.btn-primary:disabled { opacity: 0.6; cursor: not-allowed; }
.result-card { background-color: rgba(30, 41, 59, 0.5); border: 1px solid #374151; border-radius: 0.75rem; padding: 1rem; display: flex; justify-content: space-between; align-items: center; transition: all 0.3s ease; animation: fadeIn 0.5s ease-out; }
.result-card:hover { transform: scale(1.02); border-color: #3b82f6; }
.icon-container { background-color: rgba(56, 189, 248, 0.1); padding: 0.75rem; border-radius: 50%; }
@keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
.raw-json-box { background-color: #0c0c0c; color: #a7f3d0; font-family: 'Courier New', Courier, monospace; font-size: 0.875rem; padding: 1rem; border-radius: 0.5rem; margin-top: 0.5rem; white-space: pre-wrap; word-break: break-all; max-height: 250px; overflow-y: auto; border: 1px solid #374151; }

/* BARU: Style untuk membuat kontainer hasil bisa di-scroll */
.response-container-scrollable {
    max-height: 450px; /* Tentukan tinggi maksimal */
    overflow-y: auto;   /* Tambahkan scrollbar vertikal jika konten melebihi max-height */
    padding-right: 10px; /* Beri sedikit ruang untuk scrollbar */
}

/* BARU: Style untuk tombol "Tampilkan Lebih Banyak" */
.load-more-btn {
    width: 100%;
    text-align: center;
    padding: 0.75rem;
    margin-top: 0.5rem;
    background-color: rgba(56, 189, 248, 0.1);
    color: #38bdf8;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
}
.load-more-btn:hover {
    background-color: rgba(56, 189, 248, 0.2);
}
</style>